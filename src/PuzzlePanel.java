
import java.io.File;

//import java.io.File;
import java.io.FileNotFoundException;

import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author satranga
 */
public class PuzzlePanel extends javax.swing.JPanel {

    private static final int ROW = 4;
    private static final int COLUMN = 14;
    /**
     * Creates new form PuzzlePanel
     */
    private TableColumnModel cm;
    private TableCell[][] dm;
    private TableModel tm;
    private String selectedComboLetter;
    private String answer;
    private int spinVal;
    private MainFrame mainFrame;
    private int counter;
    private boolean gamePlay;

    public PuzzlePanel(MainFrame mainFrame) throws FileNotFoundException {
        this.mainFrame = mainFrame;
        initComponents();
        cm = puzzleTable.getColumnModel();
        dm = new TableCell[ROW][COLUMN];
        tm = puzzleTable.getModel();
        puzzleTable.setRowHeight(50);
        puzzleTable.setShowGrid(true);

        puzzleTable.setRowSelectionAllowed(false);
        puzzleTable.setColumnSelectionAllowed(false);

        setCells();
        setCorners();
        generatePuzzle();
    }

    public void displayTable() {
        for (int i = 0; i < ROW; i++) {
            for (int j = 0; j < COLUMN; j++) {

                puzzleTable.setValueAt(dm[i][j], i, j);
                PuzzleCellRender r = new PuzzleCellRender();
                cm.getColumn(j).setCellRenderer(r);

            }
        }

    }

    public void setCorners() {
        dm[0][0].setColor(java.awt.Color.GRAY);
        dm[0][13].setColor(java.awt.Color.GRAY);
        dm[3][0].setColor(java.awt.Color.GRAY);
        dm[3][13].setColor(java.awt.Color.GRAY);
    }

    public void setCells() {
        for (int i = 0; i < ROW; i++) {
            for (int j = 0; j < COLUMN; j++) {
                if (i == 0 && j == 0) {
                    dm[i][j] = new TableCell(java.awt.Color.CYAN, "  ");
                } else if (i == 3 && j == 0) {
                    dm[i][j] = new TableCell(java.awt.Color.CYAN, "  ");
                } else if (i == 0 && j == 13) {
                    dm[i][j] = new TableCell(java.awt.Color.CYAN, "  ");
                } else if (i == 3 && j == 13) {
                    dm[i][j] = new TableCell(java.awt.Color.CYAN, "  ");
                } else {
                    dm[i][j] = new TableCell(java.awt.Color.CYAN, " ");
                }

            }
        }
    }

    public void generatePuzzle() throws FileNotFoundException {
        File f = new File("words.txt");
        Scanner lineScanner = new Scanner(f);

        int lineCount = 0;
        while (lineScanner.hasNextLine()) {
            String temp = lineScanner.nextLine();
            lineCount++;
        }

        Random rand = new Random();

        int lineNum = rand.nextInt(lineCount) + 1;

        Scanner lineGetter = new Scanner(f);
        for (int i = 0; i < lineNum - 1; i++) {
            String temp = lineGetter.nextLine();
        }

        answer = lineGetter.nextLine();

        int row = 0;
        int col = 0;

        int charIndex = 0;
        String word = answer;
        while (charIndex < word.length()) {

            if ((col == 0) && (row == 0)) {
                col++;
            } else if ((col == (COLUMN - 1)) && (row == 0)) {
                row++;
                col = 0;
            } else if ((col == 0) && (row == (ROW - 1))) {
                col++;
            } else {
                col++;

            }

            dm[row][col].setText("" + word.charAt(charIndex));
            charIndex++;
        }

        displayTable();

    }

    public void runGame() {
        if (answer.contains(selectedComboLetter)) {
            //change to not white
        } else {
            //end turn
        }
    }

    public void setSpinVal(int spinVal) {
        this.spinVal = spinVal;
        jLabel5.setText("Spin: " + spinVal);
    }

    public void resetMoneyLabel() {
        jLabel4.setText("Money: " + this.mainFrame.getCurrentPlayer().getMoney());
        this.mainFrame.getWheelPanel().setPlayerLabels();
        this.mainFrame.getWheelPanel().setMoneyLabels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDialog1 = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        puzzleTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(204, 255, 204));

        puzzleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "null", "null", "null", "null", "null", "null", "null", "null", "null", "null", "null", "null", "null", "null"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        puzzleTable.setTableHeader(null);
        jScrollPane1.setViewportView(puzzleTable);
        if (puzzleTable.getColumnModel().getColumnCount() > 0) {
            puzzleTable.getColumnModel().getColumn(0).setResizable(false);
            puzzleTable.getColumnModel().getColumn(1).setResizable(false);
            puzzleTable.getColumnModel().getColumn(2).setResizable(false);
            puzzleTable.getColumnModel().getColumn(3).setResizable(false);
            puzzleTable.getColumnModel().getColumn(4).setResizable(false);
            puzzleTable.getColumnModel().getColumn(5).setResizable(false);
            puzzleTable.getColumnModel().getColumn(6).setResizable(false);
            puzzleTable.getColumnModel().getColumn(7).setResizable(false);
            puzzleTable.getColumnModel().getColumn(8).setResizable(false);
            puzzleTable.getColumnModel().getColumn(9).setResizable(false);
            puzzleTable.getColumnModel().getColumn(10).setResizable(false);
            puzzleTable.getColumnModel().getColumn(11).setResizable(false);
            puzzleTable.getColumnModel().getColumn(12).setResizable(false);
            puzzleTable.getColumnModel().getColumn(13).setResizable(false);
        }

        jLabel1.setText("Make a Guess");

        jLabel2.setText("Buy a Vowel");

        jLabel3.setText("Solve");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "b", "c", "d", "f", "g", "h", "j", "k", "l", "m", "n", "p", "q", "r", "s", "t", "v", "w", "x", "y", "z" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("a");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("e");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("i");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("o");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("u");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton6.setText("GO");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("GO");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Money: 0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Spin: 0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(jLabel2)
                                .addGap(156, 156, 156)
                                .addComponent(jLabel3)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!answer.contains("A")) {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            } else {
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry not in the answer!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            }

        } else {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                resetMoneyLabel();
            } else {
                for (int i = 0; i < ROW; i++) {
                    for (int j = 0; j < COLUMN; j++) {
                        if (dm[i][j].getText().equalsIgnoreCase("A")) {
                            dm[i][j].setVisible(true);
                        }
                    }
                }
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                resetMoneyLabel();
                displayTable();
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!answer.contains("E")) {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            } else {
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry not in the answer!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            }

        } else {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                resetMoneyLabel();
            } else {
                for (int i = 0; i < ROW; i++) {
                    for (int j = 0; j < COLUMN; j++) {
                        if (dm[i][j].getText().equalsIgnoreCase("E")) {
                            dm[i][j].setVisible(true);
                        }
                    }
                }
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                resetMoneyLabel();
                displayTable();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!answer.contains("I")) {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            } else {
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry not in the answer!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            }

        } else {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                resetMoneyLabel();
            } else {
                for (int i = 0; i < ROW; i++) {
                    for (int j = 0; j < COLUMN; j++) {
                        if (dm[i][j].getText().equalsIgnoreCase("I")) {
                            dm[i][j].setVisible(true);
                        }
                    }
                }
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                resetMoneyLabel();
                displayTable();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (!answer.contains("O")) {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            } else {
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry not in the answer!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            }

        } else {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                resetMoneyLabel();
            } else {
                for (int i = 0; i < ROW; i++) {
                    for (int j = 0; j < COLUMN; j++) {
                        if (dm[i][j].getText().equalsIgnoreCase("O")) {
                            dm[i][j].setVisible(true);
                        }
                    }
                }
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                resetMoneyLabel();
                displayTable();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (!answer.contains("U")) {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            } else {
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry not in the answer!");
                this.mainFrame.showPanel(1);
                this.mainFrame.nextPlayer();
                resetMoneyLabel();
            }

        } else {
            if (this.mainFrame.getCurrentPlayer().getMoney() < 250) {
                JOptionPane.showMessageDialog(this.mainFrame, "Sorry you don't have enough money!");
                resetMoneyLabel();
            } else {
                for (int i = 0; i < ROW; i++) {
                    for (int j = 0; j < COLUMN; j++) {
                        if (dm[i][j].getText().equalsIgnoreCase("U")) {
                            dm[i][j].setVisible(true);
                        }
                    }
                }
                this.mainFrame.getCurrentPlayer().setMoney(-1, 0);
                resetMoneyLabel();
                displayTable();
            }
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (jTextField1.getText().equalsIgnoreCase(answer)) {
            for (int i = 0; i < ROW; i++) {
                for (int j = 0; j < COLUMN; j++) {
                    dm[i][j].setVisible(true);
                }
            }
            this.mainFrame.getCurrentPlayer().setMoney(2000, 1);

            try {
                this.mainFrame.showContinue();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PuzzlePanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this.mainFrame, "Sorry wrong answer!");
            this.mainFrame.showPanel(1);
            this.mainFrame.nextPlayer();
            resetMoneyLabel();
        }
        resetMoneyLabel();
        displayTable();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        selectedComboLetter = (String) jComboBox2.getSelectedItem();
        counter = 0;
        if (!answer.contains(selectedComboLetter.toUpperCase())) {
            JOptionPane.showMessageDialog(this.mainFrame, "Sorry not in the answer!");
            this.mainFrame.showPanel(1);
            this.mainFrame.nextPlayer();
            resetMoneyLabel();
        } else {
            for (int i = 0; i < ROW; i++) {
                for (int j = 0; j < COLUMN; j++) {
                    if (dm[i][j].getText().equalsIgnoreCase(selectedComboLetter)) {
                        dm[i][j].setVisible(true);
                        counter++;
                    }
                }
            }
            this.mainFrame.getCurrentPlayer().setMoney(this.mainFrame.getWheelPanel().getValue(), counter);
            resetMoneyLabel();
            displayTable();

        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable puzzleTable;
    // End of variables declaration//GEN-END:variables
}
